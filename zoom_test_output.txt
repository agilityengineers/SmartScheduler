üìä Storage mode: In-Memory
‚úÖ Environment variables loaded from .env file
Environment:
- NODE_ENV: production
- USE_POSTGRES: true
‚úÖ All required environment variables are set for production
Starting Zoom integration test...
API Key exists: true
API Secret exists: true
Account ID exists: true
Checking database connection...
‚úÖ Database connection successful: 2025-04-05T21:05:38.566Z
‚úÖ Connected to PostgreSQL database
üîç Testing Zoom integration functionality...
Created test user with ID 1
Using test user: testzoom (ID: 1)
‚ö†Ô∏è This test requires valid Zoom API credentials
‚ö†Ô∏è For testing purposes, you need to set environment variables:
   - ZOOM_API_KEY: Your Zoom API key/Client ID
   - ZOOM_API_SECRET: Your Zoom API secret/Client Secret
   - ZOOM_ACCOUNT_ID: (Optional) Your Zoom Account ID for OAuth
Successfully authenticated with Zoom: Token obtained
Created test Zoom integration with ID 1
Using Zoom integration: Test Zoom Integration (ID: 1)
‚úÖ Successfully authenticated with Zoom for user 1
Testing Zoom meeting URL validation...
Error validating Zoom meeting ID 123456789: AxiosError: Request failed with status code 404
    at settle (file:///home/runner/workspace/node_modules/axios/lib/core/settle.js:19:12)
    at IncomingMessage.handleStreamEnd (file:///home/runner/workspace/node_modules/axios/lib/adapters/http.js:599:11)
    at IncomingMessage.emit (node:events:530:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (file:///home/runner/workspace/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async ZoomService.validateMeetingId (/home/runner/workspace/server/calendarServices/zoomService.ts:139:24)
    at async ZoomService.validateMeetingUrl (/home/runner/workspace/server/calendarServices/zoomService.ts:413:14)
    at async testZoomIntegration (/home/runner/workspace/server/tests/testZoomIntegration.ts:145:29) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      Authorization: 'Bearer eyJzdiI6IjAwMDAwMiIsImFsZyI6IkhTNTEyIiwidiI6IjIuMCIsImtpZCI6ImIzOWM5ZTgzLWQyNTYtNDgzNi1iYmYzLTJkODJmMDc3ODk4NSJ9.eyJhdWQiOiJodHRwczovL29hdXRoLnpvb20udXMiLCJ1aWQiOiJHOXdNWTVfSVRWdUxoSXdWX1k3Y0l3IiwidmVyIjoxMCwiYXVpZCI6IjdjZGZkYTdlMDViMTcyZDA4YmY1ZmI5MzgwZDUyNGZlOWQ1YjQzZjg4MzAxYTBmNjM4YzQ1MjIwYTZmOGViOWEiLCJuYmYiOjE3NDM4ODcxMzgsImNvZGUiOiI4blMxTlF1MFFIT05TaWtEY28zWTBnbHF0VktBbzhlUzkiLCJpc3MiOiJ6bTpjaWQ6SkV6Q2tFRlJQbUFqVEV1S3VtTlpBIiwiZ25vIjowLCJleHAiOjE3NDM4OTA3MzgsInR5cGUiOjMsImlhdCI6MTc0Mzg4NzEzOCwiYWlkIjoiV2l3ek1DNm5UdXFucTZlZVI0QkM3ZyJ9.kEiRyDKwMk5DQaM77kQ1zJcb5Pd-CgVknpGEgpC2aldx5CADPG_teqG4pNzgGInY7acH-bkbGGkT_2C300_9_g',
      'User-Agent': 'axios/1.8.4',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'get',
    url: 'https://api.zoom.us/v2/meetings/123456789',
    allowAbsoluteUrls: true,
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: true,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: true,
    socket: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'api.zoom.us',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'api.zoom.us',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: true,
      timeout: 5000,
      parser: null,
      _httpMessage: null,
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: -1,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 1767,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 1737,
        [Symbol(triggerId)]: 1735
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 1,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    _header: 'GET /v2/meetings/123456789 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'Authorization: Bearer eyJzdiI6IjAwMDAwMiIsImFsZyI6IkhTNTEyIiwidiI6IjIuMCIsImtpZCI6ImIzOWM5ZTgzLWQyNTYtNDgzNi1iYmYzLTJkODJmMDc3ODk4NSJ9.eyJhdWQiOiJodHRwczovL29hdXRoLnpvb20udXMiLCJ1aWQiOiJHOXdNWTVfSVRWdUxoSXdWX1k3Y0l3IiwidmVyIjoxMCwiYXVpZCI6IjdjZGZkYTdlMDViMTcyZDA4YmY1ZmI5MzgwZDUyNGZlOWQ1YjQzZjg4MzAxYTBmNjM4YzQ1MjIwYTZmOGViOWEiLCJuYmYiOjE3NDM4ODcxMzgsImNvZGUiOiI4blMxTlF1MFFIT05TaWtEY28zWTBnbHF0VktBbzhlUzkiLCJpc3MiOiJ6bTpjaWQ6SkV6Q2tFRlJQbUFqVEV1S3VtTlpBIiwiZ25vIjowLCJleHAiOjE3NDM4OTA3MzgsInR5cGUiOjMsImlhdCI6MTc0Mzg4NzEzOCwiYWlkIjoiV2l3ek1DNm5UdXFucTZlZVI0QkM3ZyJ9.kEiRyDKwMk5DQaM77kQ1zJcb5Pd-CgVknpGEgpC2aldx5CADPG_teqG4pNzgGInY7acH-bkbGGkT_2C300_9_g\r\n' +
      'User-Agent: axios/1.8.4\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: api.zoom.us\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 2,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/v2/meetings/123456789',
    _ended: true,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://api.zoom.us/v2/meetings/123456789',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 58,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'api.zoom.us',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://api.zoom.us/v2/meetings/123456789',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      authorization: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      date: 'Sat, 05 Apr 2025 21:05:39 GMT',
      'content-type': 'application/json;charset=UTF-8',
      'content-length': '60',
      connection: 'keep-alive',
      'x-zm-trackingid': 'v=2.0;clid=us02;rid=WEB_18da1fb2451e27284573d533ee0648f9',
      'x-content-type-options': 'nosniff',
      'cache-control': 'no-cache, no-store, must-revalidate, no-transform',
      pragma: 'no-cache',
      expires: 'Thu, 01 Jan 1970 00:00:00 GMT',
      'set-cookie': [Array],
      vary: 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers',
      'x-zm-zoneid': 'VA',
      'cf-cache-status': 'DYNAMIC',
      'report-to': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=U0OvbpnVW9IkAxrLZIi2UWtyLFplS4mQ9EA8dQVTRCAeAqyxGTFrx6XpVJc7zaSiU0kL7m3V6v3VLseUOPsVnLfY5o9nZjNznlJ2vJEmx%2BDSBnauH9WUOsQdCnwO"}],"group":"cf-nel","max_age":604800}',
      nel: '{"success_fraction":0.01,"report_to":"cf-nel","max_age":604800}',
      server: 'cloudflare',
      'cf-ray': '92bc013a88f6f8d1-SEA',
      'alt-svc': 'h3=":443"; ma=86400'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      method: 'get',
      url: 'https://api.zoom.us/v2/meetings/123456789',
      allowAbsoluteUrls: true,
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: true,
      socket: [TLSSocket],
      _header: 'GET /v2/meetings/123456789 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'Authorization: Bearer eyJzdiI6IjAwMDAwMiIsImFsZyI6IkhTNTEyIiwidiI6IjIuMCIsImtpZCI6ImIzOWM5ZTgzLWQyNTYtNDgzNi1iYmYzLTJkODJmMDc3ODk4NSJ9.eyJhdWQiOiJodHRwczovL29hdXRoLnpvb20udXMiLCJ1aWQiOiJHOXdNWTVfSVRWdUxoSXdWX1k3Y0l3IiwidmVyIjoxMCwiYXVpZCI6IjdjZGZkYTdlMDViMTcyZDA4YmY1ZmI5MzgwZDUyNGZlOWQ1YjQzZjg4MzAxYTBmNjM4YzQ1MjIwYTZmOGViOWEiLCJuYmYiOjE3NDM4ODcxMzgsImNvZGUiOiI4blMxTlF1MFFIT05TaWtEY28zWTBnbHF0VktBbzhlUzkiLCJpc3MiOiJ6bTpjaWQ6SkV6Q2tFRlJQbUFqVEV1S3VtTlpBIiwiZ25vIjowLCJleHAiOjE3NDM4OTA3MzgsInR5cGUiOjMsImlhdCI6MTc0Mzg4NzEzOCwiYWlkIjoiV2l3ek1DNm5UdXFucTZlZVI0QkM3ZyJ9.kEiRyDKwMk5DQaM77kQ1zJcb5Pd-CgVknpGEgpC2aldx5CADPG_teqG4pNzgGInY7acH-bkbGGkT_2C300_9_g\r\n' +
        'User-Agent: axios/1.8.4\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: api.zoom.us\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/v2/meetings/123456789',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'api.zoom.us',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: { code: 3001, message: 'Meeting does not exist: 123456789.' }
  },
  status: 404
}
URL "https://zoom.us/j/123456789" has valid format: false
Invalid Zoom meeting URL format: https://invalid-url.com/meeting
URL "https://invalid-url.com/meeting" is valid: false (should be false)
Creating a test Zoom meeting...
Zoom meeting created successfully: {
  uuid: 'iM/vS1DJQkKY1uylVUUQ7A==',
  id: 88478479794,
  host_id: 'G9wMY5_ITVuLhIwV_Y7cIw',
  host_email: 'expertmakermedia@gmail.com',
  topic: 'Test Meeting',
  type: 2,
  status: 'waiting',
  start_time: '2025-04-05T22:05:39Z',
  duration: 60,
  timezone: 'UTC',
  agenda: 'This is a test meeting created by the integration test',
  created_at: '2025-04-05T21:05:39Z',
  start_url: 'https://us02web.zoom.us/s/6128163356?zak=eyJ0eXAiOiJKV1QiLCJzdiI6IjAwMDAwMSIsInptX3NrbSI6InptX28ybSIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJ3ZWIiLCJjbHQiOjAsIm1udW0iOiI2MTI4MTYzMzU2IiwiYXVkIjoiY2xpZW50c20iLCJ1aWQiOiJHOXdNWTVfSVRWdUxoSXdWX1k3Y0l3IiwiemlkIjoiNjViNTZkMzk2MGVmNDFmMGE4OTFlNmVjM2VlOWFjZjAiLCJzayI6IjAiLCJzdHkiOjEwMCwid2NkIjoidXMwMiIsImV4cCI6MTc0Mzg5NDMzOSwiaWF0IjoxNzQzODg3MTM5LCJhaWQiOiJXaXd6TUM2blR1cW5xNmVlUjRCQzdnIiwiY2lkIjoiIn0.CCcot2Aq4SK1aoQepH9vzilRg83g2nyb-5MtLeYWbpQ',
  join_url: 'https://us02web.zoom.us/j/6128163356?omn=88478479794',
  pmi: '6128163356',
  settings: {
    host_video: true,
    participant_video: true,
    cn_meeting: false,
    in_meeting: false,
    join_before_host: true,
    jbh_time: 0,
    mute_upon_entry: true,
    watermark: false,
    use_pmi: true,
    approval_type: 2,
    audio: 'both',
    auto_recording: 'none',
    enforce_login: false,
    enforce_login_domains: '',
    alternative_hosts: '',
    alternative_host_update_polls: false,
    close_registration: false,
    show_share_button: false,
    allow_multiple_devices: false,
    registrants_confirmation_email: true,
    waiting_room: true,
    request_permission_to_unmute_participants: false,
    global_dial_in_countries: [ 'US' ],
    global_dial_in_numbers: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object]
    ],
    registrants_email_notification: true,
    meeting_authentication: false,
    encryption_type: 'enhanced_encryption',
    approved_or_denied_countries_or_regions: { enable: false },
    breakout_room: { enable: false },
    internal_meeting: false,
    continuous_meeting_chat: {
      enable: false,
      auto_add_invited_external_users: false,
      auto_add_meeting_participants: false
    },
    participant_focused_meeting: false,
    push_change_to_calendar: false,
    resources: [],
    auto_start_meeting_summary: false,
    auto_start_ai_companion_questions: false,
    allow_host_control_participant_mute_state: false,
    alternative_hosts_email_notification: true,
    show_join_info: false,
    device_testing: false,
    focus_mode: false,
    meeting_invitees: [],
    private_meeting: false,
    email_notification: true,
    host_save_video_order: false,
    sign_language_interpretation: { enable: false },
    email_in_attendee_report: false
  },
  supportGoLive: false,
  creation_source: 'open_api',
  pre_schedule: false
}
‚úÖ Test meeting created with URL: https://us02web.zoom.us/j/6128163356?omn=88478479794
Created meeting URL is valid: true
Cleaning up - deleting test meeting...
Error deleting Zoom meeting AxiosError: Request failed with status code 400
    at settle (file:///home/runner/workspace/node_modules/axios/lib/core/settle.js:19:12)
    at IncomingMessage.handleStreamEnd (file:///home/runner/workspace/node_modules/axios/lib/adapters/http.js:599:11)
    at IncomingMessage.emit (node:events:530:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (file:///home/runner/workspace/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async ZoomService.deleteMeeting (/home/runner/workspace/server/calendarServices/zoomService.ts:354:7)
    at async testZoomIntegration (/home/runner/workspace/server/tests/testZoomIntegration.ts:185:27) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      Authorization: 'Bearer eyJzdiI6IjAwMDAwMiIsImFsZyI6IkhTNTEyIiwidiI6IjIuMCIsImtpZCI6IjU2MDhkYzUwLTI2ZjAtNDVjNi04ZjgzLWY5ZTJiNDY5NzBiNyJ9.eyJhdWQiOiJodHRwczovL29hdXRoLnpvb20udXMiLCJ1aWQiOiJHOXdNWTVfSVRWdUxoSXdWX1k3Y0l3IiwidmVyIjoxMCwiYXVpZCI6IjdjZGZkYTdlMDViMTcyZDA4YmY1ZmI5MzgwZDUyNGZlOWQ1YjQzZjg4MzAxYTBmNjM4YzQ1MjIwYTZmOGViOWEiLCJuYmYiOjE3NDM4ODcxMzksImNvZGUiOiJPdW5KeXJPUVItUzZBZk9RT1JmUmZRV2VxczNaSXl2U2QiLCJpc3MiOiJ6bTpjaWQ6SkV6Q2tFRlJQbUFqVEV1S3VtTlpBIiwiZ25vIjowLCJleHAiOjE3NDM4OTA3MzksInR5cGUiOjMsImlhdCI6MTc0Mzg4NzEzOSwiYWlkIjoiV2l3ek1DNm5UdXFucTZlZVI0QkM3ZyJ9.QfxD-DgOJZrOC3xK6RfLAxO3nvAgtUxZtf64yIw0zgwxVNj9mU-WSbWfQ9BYQVwPaBnlkLXlz32qcia3xNXO6g',
      'User-Agent': 'axios/1.8.4',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'delete',
    url: 'https://api.zoom.us/v2/meetings/6128163356',
    allowAbsoluteUrls: true,
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: true,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: true,
    socket: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'api.zoom.us',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'api.zoom.us',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: true,
      timeout: 5000,
      parser: null,
      _httpMessage: null,
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: -1,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 3070,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 1908,
        [Symbol(triggerId)]: 1906
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 1,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    _header: 'DELETE /v2/meetings/6128163356 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'Authorization: Bearer eyJzdiI6IjAwMDAwMiIsImFsZyI6IkhTNTEyIiwidiI6IjIuMCIsImtpZCI6IjU2MDhkYzUwLTI2ZjAtNDVjNi04ZjgzLWY5ZTJiNDY5NzBiNyJ9.eyJhdWQiOiJodHRwczovL29hdXRoLnpvb20udXMiLCJ1aWQiOiJHOXdNWTVfSVRWdUxoSXdWX1k3Y0l3IiwidmVyIjoxMCwiYXVpZCI6IjdjZGZkYTdlMDViMTcyZDA4YmY1ZmI5MzgwZDUyNGZlOWQ1YjQzZjg4MzAxYTBmNjM4YzQ1MjIwYTZmOGViOWEiLCJuYmYiOjE3NDM4ODcxMzksImNvZGUiOiJPdW5KeXJPUVItUzZBZk9RT1JmUmZRV2VxczNaSXl2U2QiLCJpc3MiOiJ6bTpjaWQ6SkV6Q2tFRlJQbUFqVEV1S3VtTlpBIiwiZ25vIjowLCJleHAiOjE3NDM4OTA3MzksInR5cGUiOjMsImlhdCI6MTc0Mzg4NzEzOSwiYWlkIjoiV2l3ek1DNm5UdXFucTZlZVI0QkM3ZyJ9.QfxD-DgOJZrOC3xK6RfLAxO3nvAgtUxZtf64yIw0zgwxVNj9mU-WSbWfQ9BYQVwPaBnlkLXlz32qcia3xNXO6g\r\n' +
      'User-Agent: axios/1.8.4\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: api.zoom.us\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 2,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'DELETE',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/v2/meetings/6128163356',
    _ended: true,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://api.zoom.us/v2/meetings/6128163356',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 68,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: true,
    host: 'api.zoom.us',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://api.zoom.us/v2/meetings/6128163356',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      authorization: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 400,
    statusText: 'Bad Request',
    headers: Object [AxiosHeaders] {
      date: 'Sat, 05 Apr 2025 21:05:40 GMT',
      'content-type': 'application/json;charset=UTF-8',
      'content-length': '50',
      connection: 'keep-alive',
      'x-zm-trackingid': 'v=2.0;clid=us02;rid=WEB_5d52e5e644addba080b17476a303e39f',
      'x-content-type-options': 'nosniff',
      'cache-control': 'no-cache, no-store, must-revalidate, no-transform',
      pragma: 'no-cache',
      expires: 'Thu, 01 Jan 1970 00:00:00 GMT',
      'set-cookie': [Array],
      vary: 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers',
      'x-ratelimit-category': 'Light',
      'x-zm-zoneid': 'VA',
      'cf-cache-status': 'DYNAMIC',
      'report-to': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=zX4cOazmpI%2BvzDQUvdeR49Ge2XKx8yD9eZeBqJY%2FYjMGQzARzNJQrKbK8SkeKlcMWhsK7%2FrngwSC3QEKUq%2FOqiMtJk2MT7Z2dvvtAFzTYONoaQS69uykmtoyLVnz"}],"group":"cf-nel","max_age":604800}',
      nel: '{"success_fraction":0.01,"report_to":"cf-nel","max_age":604800}',
      server: 'cloudflare',
      'cf-ray': '92bc01427e3df8d1-SEA',
      'alt-svc': 'h3=":443"; ma=86400'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      method: 'delete',
      url: 'https://api.zoom.us/v2/meetings/6128163356',
      allowAbsoluteUrls: true,
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: true,
      socket: [TLSSocket],
      _header: 'DELETE /v2/meetings/6128163356 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'Authorization: Bearer eyJzdiI6IjAwMDAwMiIsImFsZyI6IkhTNTEyIiwidiI6IjIuMCIsImtpZCI6IjU2MDhkYzUwLTI2ZjAtNDVjNi04ZjgzLWY5ZTJiNDY5NzBiNyJ9.eyJhdWQiOiJodHRwczovL29hdXRoLnpvb20udXMiLCJ1aWQiOiJHOXdNWTVfSVRWdUxoSXdWX1k3Y0l3IiwidmVyIjoxMCwiYXVpZCI6IjdjZGZkYTdlMDViMTcyZDA4YmY1ZmI5MzgwZDUyNGZlOWQ1YjQzZjg4MzAxYTBmNjM4YzQ1MjIwYTZmOGViOWEiLCJuYmYiOjE3NDM4ODcxMzksImNvZGUiOiJPdW5KeXJPUVItUzZBZk9RT1JmUmZRV2VxczNaSXl2U2QiLCJpc3MiOiJ6bTpjaWQ6SkV6Q2tFRlJQbUFqVEV1S3VtTlpBIiwiZ25vIjowLCJleHAiOjE3NDM4OTA3MzksInR5cGUiOjMsImlhdCI6MTc0Mzg4NzEzOSwiYWlkIjoiV2l3ek1DNm5UdXFucTZlZVI0QkM3ZyJ9.QfxD-DgOJZrOC3xK6RfLAxO3nvAgtUxZtf64yIw0zgwxVNj9mU-WSbWfQ9BYQVwPaBnlkLXlz32qcia3xNXO6g\r\n' +
        'User-Agent: axios/1.8.4\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: api.zoom.us\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'DELETE',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/v2/meetings/6128163356',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: true,
      host: 'api.zoom.us',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: { code: 3018, message: 'Not allow to delete PMI.' }
  },
  status: 400
}
‚ùå Error creating test meeting: Failed to delete Zoom meeting: Request failed with status code 400
‚úÖ Zoom integration test complete
